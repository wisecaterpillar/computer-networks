Для передачи данных был разработан следующий протокол:

Клиент и сервер общаются при помощи пакетов. Пакет состоит из следующих полей: 
Magix – идентификатор протокола, с помощью него мы можем определить «наш» ли пришедший пакет.
Code - код операции (C_GET_MAIL_LIST, C_SEND_MAIL, C_RECV_MAIL, C_LOGIN, C_RESPONSE)
dataSize – размер отправляемых данных
Data – данные

Клиент может послать следующие запросы серверу:
connect – подключиться к серверу (C_LOGIN)
check – проверить почтовый ящик (C_GET_MAIL_LIST)
send – отправить письмо (C_SEND_MAIL)
receive – получить письмо по ID (C_RECV_MAIL)

В ответ сервер посылает клиенту пакет с кодом C_RESPONSE и требуемыми данными. 

/--------------------------------------------------/

Сервер поддерживает комманды: 
users - для отображения текущий подключений
kick - для принудительного отключения клиентов
exit – для завершения работы

На сервере выполняются несколько потоков. Один из них обрабатывает команды, введенные пользователем, а другие осуществляют общение с клиентом. При присоединении клиента запускается новый поток, который отвечает за прием запросов от клиента, их обработку и отсылку ответов. При получении пакета от клиента, сервер выполняет действия в соответствии с кодом пришедшего пакета.

Код представлен в приложении 1.1.

Клиент поддерживает комманды:
connect – подключиться к серверу
disconnect – отключиться от сервера
check – проверить почтовый ящик
send – отправить письмо
receive – получить письмо по ID
help  - вызов списка доступных команд
exit – выход из программы

В функции main запущен цикл, который выполняется до тех пор, пока сброшен флаг isFinished, этот флаг устанавливается только в случае, если  введена команда exit. В этом цикле считывается и обрабатывается  команда, введенная клиентом. Для каждой введенной команды запускается функция (или выводится ошибка, если команда не верна). Внутри этой функции клиент запрашивает дополнительные данные, отправляет пакет и ждет ответного пакета от сервера. 
